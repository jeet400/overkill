<%- include('components/template') %>
<main class="container flex-grow px-6 py-10 mx-auto animate-fade-in">
  <div class="flex items-center justify-between w-full pb-6 mx-auto">
    <div class="flex flex-col">
      <h1 class="text-2xl font-bold text-white">Instances</h1>
      <p class="text-gray-400 text-md">Overview of your servers on <%= name %>.</p>
    </div>
    <div class="flex items-center gap-3">
      <% if (req.user.admin) { %>
        <div class="relative inline-block" x-data="{ open: false }">
          <button @click="open = !open" class="flex items-center gap-2 px-6 py-2 text-white bg-indigo-600 rounded-lg shadow-md transition-all duration-200 hover:scale-95 hover:bg-indigo-800 focus:ring-2 focus:ring-indigo-800">
            <span>Filter</span>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" class="size-4 transition-transform" :class="open ? 'rotate-180' : ''">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
            </svg>
          </button>
          <div x-show="open" class="absolute right-0 w-48 mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-lg transition-opacity duration-300" x-transition:enter="opacity-100" x-transition:leave="opacity-0">
            <div class="py-2">
              <a href="/instances<%= req.query.see === 'other' ? '' : '?see=other' %>" class="block px-4 py-2 text-sm text-gray-200 hover:bg-gray-700">
                <%= req.query.see === 'other' ? 'Showing Your Instances' : 'See All Instances' %>
              </a>
            </div>
          </div>
        </div>
      <% } %>
    </div>
  </div>
  
  <div class="overflow-hidden shadow-2xl ring-2 ring-blue-900/40 rounded-2xl mb-12 animate-table-fade-in bg-gradient-to-br from-gray-900 via-blue-950 to-gray-800">
    <table class="min-w-full divide-y divide-gray-700">
      <thead class="bg-gray-800">
        <tr>
          <th class="py-4 pl-6 text-left text-sm font-semibold text-white">Server</th>
          <th class="px-4 py-4 text-left text-sm font-semibold text-white">Status</th>
          <th class="px-4 py-4 text-left text-sm font-semibold text-white">RAM Usage</th>
          <th class="px-4 py-4 text-left text-sm font-semibold text-white">CPU Usage</th>
          <th class="px-4 py-4 text-left text-sm font-semibold text-white">IP Address</th>
        </tr>
      </thead>
      <tbody class="divide-y divide-gray-700 bg-gradient-to-br from-gray-900 via-blue-950 to-gray-800 animate-gradient">
        <% instances.forEach(instance => { %>
          <tr onclick="window.location.href = '../instance/<%= instance.Id %>';"
              class="group cursor-pointer transition-all duration-300 hover:scale-[1.04] hover:shadow-blue-500/40 hover:blur-[2px] shadow-lg rounded-xl animate-row-in hover:bg-blue-900/40">
            <td class="py-4 pl-6 text-sm font-medium text-white animate-fade-in"><%= instance.Name %></td>
            <td class="px-4 py-4 text-sm">
              <span id="status_<%= instance.Id %>"
                    class="px-3 py-1 text-xs font-bold text-white rounded-lg bg-gray-700 transition-all duration-300 group-hover:animate-status-pulse animate-fade-in shimmer">
                <i class="fas fa-circle mr-1 <%= instance.Status === 'Online' ? 'text-green-400' : 'text-red-400' %>"></i>
                <%= instance.Status || 'Checking...' %>
              </span>
            </td>
            <td class="px-4 py-4 text-sm text-gray-300">
              <div class="relative w-32 h-3 bg-gray-700 rounded-md overflow-hidden">
                <div id="ramUsageBar_<%= instance.Id %>"
                     class="absolute top-0 left-0 h-full bg-gradient-to-r from-green-400 via-green-500 to-green-600 rounded-md shadow-md animate-bar-grow"
                     style="width: 0%;"></div>
              </div>
              <span id="ramUsagetext_<%= instance.Id %>" class="text-xs text-gray-400 animate-fade-in">0%</span>
            </td>
            <td class="px-4 py-4 text-sm text-gray-300">
              <div class="relative w-32 h-3 bg-gray-700 rounded-md overflow-hidden">
                <div id="cpuUsageBar_<%= instance.Id %>"
                     class="absolute top-0 left-0 h-full bg-gradient-to-r from-blue-400 via-blue-500 to-blue-600 rounded-md shadow-md animate-bar-grow"
                     style="width: 0%;"></div>
              </div>
              <span id="cpuUsagetext_<%= instance.Id %>" class="text-xs text-gray-400 animate-fade-in">0%</span>
            </td>
            <td class="px-4 py-4 text-sm text-gray-300">
              <span class="px-3 py-1 text-xs font-medium text-gray-200 bg-gray-700 rounded-lg animate-fade-in">
                <%= instance.Node.address %>:<%= instance.Primary %>
              </span>
            </td>
          </tr>
          <script>
            function updateInstanceStatus(instanceId, status) {
              const statusElement = document.getElementById(`status_${instanceId}`);
              statusElement.innerHTML = `<i class="fas fa-circle mr-1 ${status === 'Online' ? 'text-green-400' : 'text-red-400'}"></i> ${status}`;
              statusElement.className =
                `px-3 py-1 text-xs font-bold rounded-lg transition-all duration-300 ${
                  status === 'Online'
                    ? 'bg-green-500 text-white animate-status-pulse'
                    : 'bg-red-500 text-white'
                } shimmer`;
            }
            function updateUsageBars(instanceId, ramUsage, cpuUsage) {
              document.getElementById(`ramUsageBar_${instance.Id}`).style.width = `${ramUsage}%`;
              document.getElementById(`ramUsagetext_${instance.Id}`).textContent = `${ramUsage}%`;
              document.getElementById(`cpuUsageBar_${instance.Id}`).style.width = `${cpuUsage}%`;
              document.getElementById(`cpuUsagetext_${instance.Id}`).textContent = `${cpuUsage}%`;
            }
            function initStatsWebSocket(instanceId) {
              const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';
              const statsWs = new WebSocket(`${protocol}://${window.location.hostname}:${window.location.port}/stats/${instanceId}`);
              statsWs.onmessage = event => {
                try {
                  const stats = JSON.parse(event.data);
                  const ramUsage = stats.memory_stats?.limit ? ((stats.memory_stats.usage / stats.memory_stats.limit) * 100).toFixed(2) : 0;
                  const cpuUsage = stats.cpu_stats?.system_cpu_usage ? ((stats.cpu_stats.cpu_usage.total_usage / stats.cpu_stats.system_cpu_usage) * 100).toFixed(2) : 0;
                  updateUsageBars(instanceId, ramUsage, cpuUsage);
                  updateInstanceStatus(instanceId, ramUsage > 1 ? "Online" : "Offline");
                } catch (e) {
                  console.error('Invalid stats data:', event.data);
                }
              };
              statsWs.onerror = error => console.error('WebSocket error:', error);
              statsWs.onclose = () => setTimeout(() => initStatsWebSocket(instanceId), 3000);
            }
            initStatsWebSocket('<%= instance.Id %>');
          </script>
        <% }); %>
      </tbody>
    </table>
  </div>
</main>

<style>
@keyframes row-in {
  from { opacity: 0; transform: translateY(30px) scale(0.98);}
  to { opacity: 1; transform: translateY(0) scale(1);}
}
@keyframes fade-in {
  from { opacity: 0;}
  to { opacity: 1;}
}
@keyframes bar-grow {
  from { width: 0;}
  to { width: 100%;}
}
@keyframes status-pulse {
  0% { box-shadow: 0 0 0 0 rgba(34,197,94,0.7);}
  70% { box-shadow: 0 0 10px 10px rgba(34,197,94,0);}
  100% { box-shadow: 0 0 0 0 rgba(34,197,94,0);}
}
@keyframes shimmer {
  0% { background-position: -200px 0; }
  100% { background-position: 200px 0; }
}
@keyframes gradient-move {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}
.animate-row-in { animation: row-in 0.7s cubic-bezier(.39,.575,.565,1) both; }
.animate-fade-in { animation: fade-in 1s cubic-bezier(.39,.575,.565,1) both; }
.animate-bar-grow { animation: bar-grow 1.2s cubic-bezier(.39,.575,.565,1); }
.animate-status-pulse { animation: status-pulse 1.2s infinite; }
.animate-table-fade-in { animation: fade-in 1.2s cubic-bezier(.39,.575,.565,1) both; }
.shimmer {
  background: linear-gradient(90deg, rgba(34,197,94,0.1) 25%, rgba(34,197,94,0.2) 50%, rgba(34,197,94,0.1) 75%);
  background-size: 400px 100%;
  animation: shimmer 2s infinite linear;
}
</style>
